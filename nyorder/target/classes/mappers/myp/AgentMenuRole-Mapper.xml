<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.namyang.nyorder.myp.dao.AgentMenuRoleMapper">
	<sql id="selectMenuWhere">
		<where>
			AND M.USE_YN=''Y''
			<if test="level != null and level != ''">
				AND LEVEL = ${level}
			</if>
			<if test="agenSeq != null and agenSeq != ''">
				AND ((SELECT SALE_CD FROM T_AGEN_MST WHERE AGEN_SEQ = ${agenSeq}) = ''ALL'' OR  M.MENU_TYPE = ''ALL'' OR M.MENU_TYPE = (SELECT SALE_CD FROM T_AGEN_MST WHERE AGEN_SEQ = ${agenSeq}) )
			</if>
		</where>
	</sql>
   	<sql id="selectMenu">
		WITH MENU_TABLE
		AS
		(
			   SELECT
			   		1 AS LEVEL,
			   		MENU_ID, 
					MENU_SEQ,
					MENU_PARENT_SEQ, 
					MENU_NM,
					MENU_URL,
					MENU_ORDR,
					MENU_TYPE,
					USE_YN,
					convert(varchar(100),RIGHT(''0''+convert(varchar(100),MENU_ORDR),4))  sort,
				convert(varchar(100),MENU_NM)   MENU_CURRENT,
				convert(varchar(100),MENU_NM) as lvl1,
				convert(varchar(100),'''') as lvl2,
				convert(varchar(100),'''') as lvl3
		   FROM		dbo.T_COMM_MENU
		   WHERE	MENU_PARENT_SEQ = 0
		
		   UNION ALL
		
		   SELECT 
		   			LEVEL+1,
		   			B.MENU_ID,
		   			B.MENU_SEQ, 
		   			B.MENU_PARENT_SEQ, 
		   			B.MENU_NM,
		   			B.MENU_URL,
		   			B.MENU_ORDR,
		   			B.MENU_TYPE,
		   			B.USE_YN,
		   			convert(varchar(100), convert(nvarchar,C.sort) + '' > '' + RIGHT((''0''+ convert(varchar(100),B.MENU_ORDR)),4)) sort,
		   			CONVERT(varchar(100), convert(nvarchar,C.MENU_CURRENT) + '' > '' + convert(varchar(100), B.MENU_NM)) MENU_CURRENT,
		   			convert(varchar(100),C.lvl1) as lvl1,
		   			case when LEVEL+1 = ''2'' then convert(varchar(100),B.MENU_NM) else convert(varchar(100),C.MENU_NM) end  as lvl2,
		   			case when LEVEL+1 = ''3'' then convert(varchar(100),B.MENU_NM) else '''' end  as lvl3
			   FROM 	dbo.T_COMM_MENU B 
			   JOIN 	MENU_TABLE C 
			   ON		B.MENU_PARENT_SEQ = C.MENU_SEQ
		   )
	</sql>
	
	
	<select id="selectAgentMenuRoleGrpLastUpd" parameterType="com.namyang.nyorder.myp.vo.AgentMenuRoleVO" resultType="com.namyang.nyorder.myp.vo.AgentMenuRoleVO">
	EXEC P_OPEN_KEY
	SELECT  UPD_SEQ,
			CONVERT(varchar, DecryptByKey((SELECT EMPL_NM FROM T_AGEN_EMPL E WHERE E.EMPL_SEQ = R.UPD_SEQ))) LAST_UPD_NM, 
			CONVERT(varchar, UPD_DTM, 120) AS last_Upd_Dtm
	FROM 	T_AGEN_MENU_ROLE R
	WHERE 	AGEN_SEQ =  #{agenSeq}
	AND		UPD_DTM = (SELECT	max(UPD_DTM) last_upd_dtm
						FROM	T_AGEN_MENU_ROLE 
						WHERE	AGEN_SEQ =  #{agenSeq}
						GROUP by AGEN_SEQ 
					)		
	GROUP by UPD_SEQ, UPD_DTM
	</select>
	
	
	<select id="selectAgentMenuRoleGrpList" parameterType="com.namyang.nyorder.myp.vo.AgentMenuRoleVO" resultType="hashmap">
		/* agentMenuRole-Mapper - selectAgentMenuRoleGrpList */
		<![CDATA[
		DECLARE @COLUMNS NVARCHAR(MAX)
		DECLARE @SQL	 NVARCHAR(MAX)
		SET @COLUMNS = ''
		SELECT @COLUMNS = @COLUMNS + '[' + EMPL_SEC + '],'
		FROM (
				SELECT COMM_CD as EMPL_SEC, ordr FROM T_COMM WHERE COMM_GRP_CD ='EMPL_SEC_CD' AND USE_YN = 'Y' AND COMM_DESC2 = 'Y'
		) AS COMM_CD
		ORDER BY ordr
		SET @COLUMNS = LEFT(@COLUMNS, LEN(@COLUMNS) - 1)
		
		SET @SQL = '
		]]>
		<include refid="selectMenu"/>
		<![CDATA[
		'
		 						
		SET @SQL = @SQL + ' 
			SELECT
				*
			FROM MENU_TABLE M
			INNER  
			JOIN
			(SELECT *
			  FROM (
					SELECT tcm.MENU_SEQ AS menu_seq, tcm.MENU_ID, tamr.EMPL_SEC AS EMPL_SEC , ISNULL(tamr.USE_YN , ''N'') AS USE_YN
					FROM T_COMM_MENU AS tcm
					INNER JOIN T_COMM_MENU_ROLE tcmr
					on	 tcmr.MENU_SEQ  = tcm.MENU_SEQ 
					INNER JOIN (
						SELECT COMM_CD as EMPL_SEC  FROM T_COMM WHERE COMM_GRP_CD =''EMPL_SEC_CD'' AND USE_YN = ''Y'' AND COMM_DESC2 = ''Y''
					) AS tae
					ON 1=1
					LEFT JOIN 
						(
							SELECT EMPL_SEC, MENU_SEQ, USE_YN
							FROM T_AGEN_MENU_ROLE
							WHERE agen_seq = ${agenSeq}
						)
					AS tamr
					ON tcm.MENU_SEQ = tamr.MENU_SEQ
		
					) AS result
			  PIVOT ( 
					  MAX(USE_YN) 
					  FOR EMPL_SEC IN (' + @COLUMNS + ') 
					) AS pivot_result 
			) S
			ON M.MENU_SEQ = S.MENU_SEQ
		]]>
		<include refid="selectMenuWhere"/>
		<![CDATA[
			
			ORDER BY SORT					
		'				
								
		EXEC(@SQL)
		]]>
	</select>
	
	
	
	
	<select id="selectAgentMenuRoleEmpLastUpd" parameterType="com.namyang.nyorder.myp.vo.AgentMenuRoleVO" resultType="com.namyang.nyorder.myp.vo.AgentMenuRoleVO">
	EXEC P_OPEN_KEY
	SELECT  UPD_SEQ,
			CONVERT(varchar, DecryptByKey((SELECT EMPL_NM FROM T_AGEN_EMPL E WHERE E.EMPL_SEQ = R.UPD_SEQ))) LAST_UPD_NM, 
			CONVERT(varchar, UPD_DTM, 120) AS last_Upd_Dtm
	FROM 	T_AGEN_EMPL_ROLE R
	WHERE 	AGEN_SEQ =  #{agenSeq}
	AND		UPD_DTM = (SELECT	max(UPD_DTM) last_upd_dtm
						FROM	T_AGEN_EMPL_ROLE 
						WHERE	AGEN_SEQ =  #{agenSeq}
						GROUP by AGEN_SEQ
					)		
	GROUP by UPD_SEQ, UPD_DTM
	</select>
	
	<select id="selectAgentMenuRoleEmpList" parameterType="com.namyang.nyorder.myp.vo.AgentMenuRoleVO" resultType="hashmap">
		/* agentMenuRole-Mapper - selectAgentMenuRoleEmpList */
		<![CDATA[
		DECLARE @COLUMNS NVARCHAR(MAX)
		DECLARE @SQL	 NVARCHAR(MAX)
		
		SET @COLUMNS = ''
		
		SELECT @COLUMNS = @COLUMNS + '[' + EMPL_SEQ + '],'
			FROM (
				SELECT CONVERT(NVARCHAR(20), tae.EMPL_SEQ) AS EMPL_SEQ 
				FROM T_AGEN_EMPL tae
				WHERE tae.AGEN_SEQ = ${agenSeq}
			   ) AS EMPL_SEQ
		ORDER BY EMPL_SEQ
		 
		
		IF LEN(@COLUMNS) > 0 
			BEGIN	
				SET @COLUMNS = LEFT(@COLUMNS, LEN(@COLUMNS) - 1)
		 		SET @SQL = '
				]]>
				<include refid="selectMenu"/>
				<![CDATA[
				'
				 SET @SQL = @SQL + ' 
					
					 SELECT
						M.menu_seq as menuSeq,
						M.lvl1,
						M.lvl2,
						M.lvl3,
						S.*
					FROM MENU_TABLE M
					INNER  
					JOIN
					
					(SELECT *
					  FROM (
							SELECT 	tcm.MENU_SEQ AS menu_seq, 
									tcm.MENU_ID, 
									tae.AGEN_SEQ AS agen_seq, 
									tae.EMPL_SEQ AS EMPL_SEQ , 
									CASE WHEN taer.USE_YN = ''Y'' THEN ''Y''
										 WHEN taer.USE_YN = ''N'' THEN ''N''	
										 WHEN tamr.USE_YN = ''Y'' THEN ''Y''	
										ELSE ''N'' 
									END AS USE_YN
							FROM T_COMM_MENU AS tcm
							INNER JOIN T_COMM_MENU_ROLE tcmr
							on	 tcmr.MENU_SEQ  = tcm.MENU_SEQ 
							INNER JOIN T_AGEN_EMPL AS tae
								ON 1=1
							LEFT OUTER JOIN T_AGEN_EMPL_ROLE AS taer
								ON tcm.MENU_SEQ = taer.MENU_SEQ 
								AND tae.EMPL_SEQ = taer.EMPL_SEQ
							LEFT OUTER JOIN T_AGEN_MENU_ROLE AS tamr
								ON tamr.EMPL_SEC  = tae.EMPL_SEC_CD 
								AND tamr.AGEN_SEQ = tae.AGEN_SEQ 
								AND tcm.MENU_SEQ = tamr.MENU_SEQ 
							WHERE tae.AGEN_SEQ = ${agenSeq}
							AND	tcm.use_yn =''Y''
							) AS result
					  PIVOT ( 
							  MAX(USE_YN) 
							  FOR EMPL_SEQ IN (' + @COLUMNS + ') 
							) AS pivot_result 
					) S
					ON M.MENU_SEQ = S.MENU_SEQ
				]]>
				<include refid="selectMenuWhere"/>
				<![CDATA[
					ORDER BY SORT
				'
			END
		EXEC(@SQL)
		]]>
	</select>
	
	<update id="updateEmpl" parameterType="com.namyang.nyorder.myp.vo.AgentMenuRoleVO" >
	/* agentMenuRole-Mapper - updateEmpl */
	MERGE INTO T_AGEN_EMPL_ROLE A
	USING(
		SELECT 	#{menuSeq} as MENU_SEQ, 
				#{agenSeq} as AGEN_SEQ, 
				#{emplSeq} as EMPL_SEQ	
	) B
	ON (
		A.MENU_SEQ = B.MENU_SEQ
		AND A.AGEN_SEQ = B.AGEN_SEQ
		AND A.EMPL_SEQ = B.EMPL_SEQ
	)
	WHEN	MATCHED THEN 
			UPDATE	SET 
					A.USE_YN 			= ISNULL(#{useYn}, 'N'),	
					A.UPD_DTM			= CURRENT_TIMESTAMP,
					A.UPD_SEQ			= 0
	WHEN	NOT MATCHED THEN
			INSERT(MENU_SEQ, AGEN_SEQ, EMPL_SEQ, USE_YN, REG_DTM, REG_SEQ, UPD_DTM, UPD_SEQ)
			VALUES(#{menuSeq}, #{agenSeq},#{emplSeq},ISNULL(#{useYn},'N'),CURRENT_TIMESTAMP,#{emplSeq, jdbcType=NUMERIC},CURRENT_TIMESTAMP,#{emplSeq, jdbcType=NUMERIC});
	</update>
	
	
	<update id="updateEmplGrp" parameterType="com.namyang.nyorder.myp.vo.AgentMenuRoleVO" >
	/* agentMenuRole-Mapper - updateEmplGrp */
	MERGE INTO T_AGEN_MENU_ROLE A
	USING(
		SELECT 	#{menuSeq} as MENU_SEQ, 
				#{agenSeq} as AGEN_SEQ, 
				#{emplSec} as EMPL_SEC	
	) B
	ON (
		A.MENU_SEQ = B.MENU_SEQ
		AND A.AGEN_SEQ = B.AGEN_SEQ
		AND A.EMPL_SEC = B.EMPL_SEC
	)
	WHEN	MATCHED THEN 
			UPDATE	SET 
					A.USE_YN		= ISNULL(#{useYn,	jdbcType=VARCHAR},'N'),	
					A.UPD_DTM		= CURRENT_TIMESTAMP,
					A.UPD_SEQ		= 0
	WHEN	NOT MATCHED THEN
			INSERT(MENU_SEQ, AGEN_SEQ, EMPL_SEC, MENU_TYPE, USE_YN, REG_DTM, REG_SEQ, UPD_DTM, UPD_SEQ)
			VALUES(#{menuSeq,	jdbcType=NUMERIC}, #{agenSeq,	jdbcType=NUMERIC},#{emplSec,	jdbcType=VARCHAR},#{menuType,	jdbcType=VARCHAR}, ISNULL(#{useYn,	jdbcType=VARCHAR},'N'), CURRENT_TIMESTAMP,#{emplSeq, jdbcType=NUMERIC},CURRENT_TIMESTAMP,#{emplSeq, jdbcType=NUMERIC});
	</update>
	
	<select id="selectEmplSeqList" parameterType="com.namyang.nyorder.myp.vo.AgentMenuRoleVO" resultType="com.namyang.nyorder.comm.vo.CommCodeVO">
		SELECT CONVERT(NVARCHAR(20), tae.EMPL_SEQ) AS emplSeq 
		FROM T_AGEN_EMPL tae
		WHERE tae.AGEN_SEQ = #{agenSeq}
	</select>
	
	
</mapper>